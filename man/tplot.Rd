% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{tplot}
\alias{tplot}
\alias{vioplot}
\alias{tplot.formula}
\alias{tplot.default}
\title{tplot}
\usage{
tplot(x, ...)

\method{tplot}{formula}(
  formula,
  data = NULL,
  ...,
  subset,
  na.action = NULL,
  panel.first = NULL,
  panel.last = NULL
)

\method{tplot}{default}(
  x,
  g,
  ...,
  type = "db",
  jit = NULL,
  dist = NULL,
  dist.n = Inf,
  args.beeswarm = list(),
  main = NULL,
  sub = NULL,
  xlab = NULL,
  ylab = NULL,
  xlim = NULL,
  ylim = NULL,
  names,
  col = NULL,
  group.col = TRUE,
  bg = NA,
  group.bg = TRUE,
  pch = par("pch"),
  group.pch = TRUE,
  cex = par("cex"),
  group.cex = FALSE,
  boxcol = "grey90",
  bordercol = par("fg"),
  median.line = FALSE,
  mean.line = FALSE,
  median.pars = list(),
  mean.pars = list(),
  boxplot.pars = list(),
  quantiles = NULL,
  show.n = TRUE,
  show.na = show.n,
  cex.n = par("cex"),
  text.na = "missing",
  n.at = NULL,
  test = FALSE,
  args.test = list(),
  format_pval = TRUE,
  ann = par("ann"),
  axes = TRUE,
  frame.plot = axes,
  add = FALSE,
  at = NULL,
  horizontal = FALSE,
  panel.first = NULL,
  panel.last = NULL
)
}
\arguments{
\item{x}{a numeric vector or a single list containing such vectors}

\item{...}{for the \code{formula} method, named arguments to be passed to
  the default method

  for the default method, graphical parameters passed to \code{\link{par}}}

\item{formula}{a \code{\link{formula}}, such as \code{y ~ grp}, where y is
a numeric vector of data values to be split into groups according to the
grouping variable \code{grp} (usually a factor)}

\item{data}{a data frame (or list) from which the variables in
\code{formula} should be taken}

\item{subset}{an optional vector specifying a subset of observations to be
used for plotting}

\item{na.action}{a function which indicates what should happen when the data
contain \code{\link{NA}}s; the default is to ignore missing values in either
the response or the group}

\item{panel.first}{an expression to be evaluated after the plot axes are
set up but before any plotting takes place; this can be useful for drawing
background grids or scatterplot smooths; note that this works by lazy
evaluation: passing this argument from other plot methods may well not work
since it may be evaluated too early; see also \code{\link{plot.default}}}

\item{panel.last}{an expression to be evaluated after plotting has taken
place but before the axes, title, and box are added; see the comments about
\code{panel.first}}

\item{g}{a vector or factor object giving the group for the corresponding
elements of \code{x}, ignored with a warning if \code{x} is a list}

\item{type}{type of plot (\code{"d"} for dot, \code{"db"} for dot-box,
\code{"bd"} for box-dot, or \code{"b"} box; \code{"v"} may be used instead
of \code{"b"} for a violin plot); see examples for all options}

\item{jit, dist, dist.n}{jitter parameters for overlapping points (use
\code{0} for no jitter (i.e., points may overlap) and values > 0 for more
  distance between points); both can be length 1 (recycled as needed for
  groups) or equal to the number of groups (useful if one group has more
  points and needs more jittering than other groups)

  \code{jit} controls the amount of spread in a group of neighboring points,
  and \code{dist} controls the size of the interval to group neighboring
  points, i.e., a group of sequential points that are no more than
  \code{dist} apart are considered neighbors and will be jittered

  \code{dist.n} is the maximum number of points allowed in each group of
  neighboring points, useful for limiting the spread of points}

\item{args.beeswarm}{logical or a \emph{named} list of arguments passed to
\code{\link[beeswarm]{beeswarm}}; if \code{NULL} (default) or \code{FALSE},
\code{beeswarm} is not used; if \code{TRUE}, \code{beeswarm} is used with
pre-set defaults (i.e., \code{method = 'center'} and \code{horizontal} to
match the \code{tplot} setting); passing a list of arguments will add or
override arguments except that \code{tplot} \emph{will not} adjust data
values as \code{beeswarm} methods may}

\item{main, sub}{overall title and sub-title (below x-axis) for the plot}

\item{xlab, ylab}{x- and y-axis labels}

\item{xlim, ylim}{x- and y-axis limits}

\item{names}{group labels}

\item{col, bg}{plotting fill color; note for pch = 21:25, \code{bg} is used
to fill while \code{col} defines the border color}

\item{group.col, group.bg}{logical; if \code{TRUE}, color by group; otherwise
by order}

\item{pch}{plotting character}

\item{group.pch}{logical; if \code{TRUE}, \code{pch} by group; otherwise
by order}

\item{cex}{\strong{c}haracter \strong{ex}pansion value}

\item{group.cex}{logical; if \code{TRUE}, groups use the same \code{cex}
value; otherwise, points have individual values, recycled if necessary}

\item{boxcol, bordercol}{box fill and border colors}

\item{median.line, mean.line}{logical; draw median, mean lines}

\item{median.pars, mean.pars}{lists of graphical parameters for median and
mean lines}

\item{boxplot.pars}{additional list of graphical parameters for box plots
(or violin plots)}

\item{quantiles}{for violin plots, probabilities for quantile lines (as an
alternative to box plots); note \code{lwd}/\code{lty} may be passed to
control the quantile lines}

\item{show.n, show.na}{logical; show total and missing in each group}

\item{cex.n}{character expansion for \code{show.n} and \code{show.na}}

\item{text.na}{label for missing values (default is "missing")}

\item{n.at}{the y-coordinate (or x-coordinate if \code{horizontal = TRUE})
to place the total and missing in each group}

\item{test}{logical or function; if \code{TRUE}, a rank-sum p-value is
  added to the plot (\code{\link{wilcox.test}} or \code{\link{kruskal.test}}
  based on the number of groups)

  Alternatively, a function (or function name as a character string) can be
  used, e.g., \code{test = cuzick.test} or \code{function(x, g)
  cuzick.test(x, g)}; note that if \code{test} is a function, it must have
  at least two arguments with the numeric data values and group}

\item{args.test}{an optional \emph{named} list of \code{\link{mtext}}
arguments controlling the \code{test} text}

\item{format_pval}{logical; if \code{TRUE}, p-values are formatted with
\code{\link{pvalr}}; if \code{FALSE}, no formatting is performed;
alternatively, a function can be passed which should take a numeric value
and return a character string (or a value to be coerced) for printing}

\item{ann}{logical; annotate plot}

\item{axes}{logical; draw axes}

\item{frame.plot}{logical; draw box around \code{x-y} plot}

\item{add}{logical; add to an existing plot}

\item{at}{the x-axis group positions}

\item{horizontal}{logical; flip axes}
}
\value{
A list with the following elements (see \code{\link{boxplot}}:

\item{\code{$stats}}{a matrix, each column contains the extreme of the lower
whisker, the lower hinge, the median, the upper hinge and the extreme of the
upper whisker for one group/plot. If all the inputs have the same class
attribute, so will this component}
\item{\code{$n}}{a vector with the number of observations in each group.}
\item{\code{$conf}}{a matrix where each column contains the lower and upper
extremes of the notch}
\item{\code{$out}}{the values of any data points which lie beyond the
extremes of the whiskers}
\item{\code{$group}}{a vector of the same length as \code{out} whose
elements indicate to which group the outlier belongs}
\item{\code{$names}}{a vector of names for the groups}

additionally, \code{tplot} returns the following:
\item{\code{$test}}{the object returned by the \code{test} function}
\item{\code{$coords}}{a list for each group of data frames containing the
x- and y-coordinates of the points}
}
\description{
An alternative to \code{\link{boxplot}} with additional annotations,
hypothesis testing, and panel expressions. The individual data points can
be shown (either in the foreground or background) with point-dodging.
Violin plots with optional boxplots (and/or points) may also be shown.
}
\examples{
x <- mtcars$mpg
g <- interaction(mtcars$gear, mtcars$vs)

## these are equivalent ways to call tplot
tplot(x, g)
tplot(split(x, g))
tplot(x ~ g)
tplot(mpg ~ gear + vs, mtcars)


## tplot returns the point coordinates for later use
co <- tplot(mpg ~ vs, mtcars)
sapply(co$coords, function(x)
  points(x, pch = 16L, col = findInterval(x$y, fivenum(x$y)) + 1L))


## options for box, violin, dots
types <- c('d', 'db', 'bd', 'b', 'v', 'vd', 'dv', 'dbv', 'bv', 'n')
l <- lapply(types, function(...) mtcars$mpg)
tplot(l, type = types, names = types, xlab = 'tplot(x, type = ...)')


## horizontal plots may cut off show.n/show.na text
tplot(x, g, horizontal = TRUE)

op <- par(mar = par('mar') + c(0, 0, 0, 2))
tplot(x, g, horizontal = TRUE)

## and/or rotate labels
tplot(x, g, horizontal = TRUE, srt = 45)
par(op)


## add rank-sum or custom test to plot
tplot(mpg ~ vs, mtcars, test = TRUE)   ## two groups - wilcox.test
tplot(mpg ~ gear, mtcars, test = TRUE) ## >=2 groups - kruskal.test
tplot(mpg ~ gear, mtcars, test = rawr::cuzick.test) ## trend test

## custom test/text formatting
tplot(mtcars$mpg, 1:2, test = function(x, g)
  wilcox.test(x ~ g, data.frame(x, g), exact = FALSE, paired = TRUE),
  args.test = list(col = 2, at = 1.5, adj = 0.5, line = -3, cex = 2))


## tplot has the same return value as boxplot with addition elements
## for the test/coordinates if applicable
identical(
  within(tplot(mtcars$mpg), {test <- coords <- NULL}),
  within(boxplot(mtcars$mpg), {test <- coords <- NULL})
)


## use panel.first/panel.last like in `plot` (unavailable in `boxplot`)
tplot(
  mpg ~ gear, data = mtcars, col = 1:3, type = 'd', show.na = FALSE,
  cex = c(1, 5)[(mtcars$mpg > 30) + 1L],
  panel.last = legend('topleft', legend = 3:5, col = 1:3, pch = 1),
    panel.first = {
      rect(1.5, par('usr')[3], 2.5, par('usr')[4], col = 'cyan', border = NA)
      abline(h = mean(mtcars$mpg))
      abline(h = 1:6 * 5 + 5, lty = 'dotted', col = 'grey70')
    }
)


## beeswarm options
x <- rnorm(1000)
tplot(
  x, type = 'd',
  args.beeswarm = list(method = 'square', corral = 'gutter', corralWidth = 0.25)
)

## compare (note that tplot **does not** change the original data values)
beeswarm::beeswarm(x, method = 'square', corral = 'gutter', corralWidth = 0.25)


## example with missing data
set.seed(1)
dat <- data.frame(
  age   = replace(rnorm(80, rep(c(26, 36), c(70, 10)), 4), 1:5, NA),
  sex   = factor(sample(c('Female', 'Male'), 80, replace = TRUE)),
  group = paste0('Group ', sample(1:4, 80, prob = c(2, 5, 4, 1),
                                  replace = TRUE))
)

tplot(
  age ~ group, data = dat, las = 1, bty = 'l',
  type = c('db', 'dv', 'dbv', 'bv'), names = LETTERS[1:4],
  quantiles = c(0.25, 0.5, 0.75), lwd = c(0.5, 2, 0.5),
  text.na = 'n/a', ## default is 'missing'
  ## one pch per group
  group.pch = TRUE, pch = c(15, 17, 19, 8),
  ## color by variable not group
  group.col = FALSE, col = c('darkred', 'darkblue')[sex],
  boxcol = c('lightsteelblue1', 'lightyellow1', grey(0.9)),
  boxplot.pars = list(notch = TRUE, boxwex = 0.5)
)
legend(
  par('usr')[1], par('usr')[3], xpd = NA, bty = 'n',
  legend = levels(dat$sex), col = c('darkred', 'darkblue'), pch = 19
)

}
\seealso{
\href{http://biostat.mc.vanderbilt.edu/wiki/Main/TatsukiRcode}{Tatsuki
\code{tplot}}; \href{http://data.vanderbilt.edu/~graywh/dotplot/}{web app
for Tatsuki \code{tplot}}; \code{\link{boxplot}}; \code{\link[plotr]{jmplot}}
}
