% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils2.R
\name{tabler_stat}
\alias{tabler_stat}
\title{Description statistics \code{tabler}}
\usage{
tabler_stat(
  data,
  varname,
  byvar = NULL,
  digits = 0L,
  FUN = NULL,
  format_pval = TRUE,
  color_pval = TRUE,
  color_missing = TRUE,
  dagger = TRUE,
  color_cell_by = c("none", "value", "pct"),
  cell_color = palette()[1:2],
  confint = FALSE,
  include_na_in_prop = TRUE,
  iqr = FALSE,
  total = TRUE,
  continuous_fn = function(...) Gmisc::describeMedian(..., iqr = iqr),
  factor_fn = if (!include_na_in_prop) describeFactors else Gmisc::describeFactors,
  ...
)
}
\arguments{
\item{data}{a matrix or data frame with variables \code{varname} and
\code{byvar}}

\item{varname, byvar}{the row and column variable, respectively}

\item{digits}{number of digits past the decimal point to keep}

\item{FUN}{a function performing the test of association between
\code{varname} and \code{byvar}; \code{FALSE} will suppress the test but
keep a column for p-values; \code{NA} will suppress the test and drop the
column for p-values; or a character string; see details}

\item{format_pval}{logical; if \code{TRUE}, p-values will be formatted
using \code{\link{pvalr}}; alternatively, a function may by used which will
be applied to each p-value}

\item{color_pval}{logical; if \code{TRUE}, p-values will be colored
by significance; see \code{\link{color_pval}}; alternatively, a vector of
colors passed to \code{\link{color_pval}})}

\item{color_missing}{logical; if \code{TRUE}, rows summarizing missing
values will be shown in light grey; alternatively, a color string can be
used for a custom color}

\item{dagger}{logical or a character string giving the character to
associate with \code{FUN}; if \code{FALSE}, none are used; if \code{TRUE},
the defaults are used (\code{"*"} is used if \code{FUN} is given)}

\item{color_cell_by}{apply a color gradient to each cell (for html output);
one of \code{"none"} for no coloring, \code{"value"} to color by numeric
summary (e.g., for continuous variables), or \code{"pct"} to color by
proportions (e.g., for factors)}

\item{cell_color}{a vector of colors used for \code{color_cell_by}}

\item{confint}{logical or \code{varname}; if \code{TRUE} (or \code{varname})
rows will be formatted as confidence intervals; see \code{\link{binconr}}}

\item{include_na_in_prop}{logical; if \code{TRUE} (default), the number of
missing values is included when calculating proportions for factor levels;
if \code{FALSE}, only non-missing levels count towards proportions}

\item{iqr}{logical; if \code{TRUE}, the interquartile range is used
instead of the full range (default) for continuous variables}

\item{total}{logical; if \code{TRUE}, total column will be shown}

\item{continuous_fn, factor_fn}{functions to describe continuous and factor-like
variables (default is to show median and range for continuous); see
\code{\link[Gmisc]{getDescriptionStatsBy}}}

\item{...}{additional arguments passed to
\code{\link[Gmisc]{getDescriptionStatsBy}}}
}
\value{
A matrix with additional attributes:

\item{\code{attr(,"FUN")}}{the test passed to \code{FUN} or the test
  selected based on \code{varname} and \code{byvar} if \code{FUN = NULL}}
\item{\code{attr(,"p.value")}}{the numeric p-value returned by \code{FUN}}
\item{\code{attr(,"fnames")}}{a vector of the default \code{FUN} options
  with names to match the appropriate \code{dagger} character; see examples;
  if \code{FUN} is given, the function name will be added with a new dagger
  symbol (\code{"*"} by default or \code{dagger} if given)}
\item{\code{attr(,"tfoot")}}{a footnote for the table using each dagger
  and corresponding test name}
}
\description{
Wrapper function to create table of description statistics with optional
tests of association.
}
\details{
If \code{FUN} is \code{FALSE}, no test will be performed but a column for
p-values will still be added; \code{FUN = NA} will prevent both the test
from being performed and the column from being added to the output.

For \code{FUN = NULL} (default), the correct test will be guessed based on
the row and column data. The current options are \code{\link{fisher.test}},
\code{\link{wilcox.test}}, and \code{\link{kruskal.test}}. If the row data
is continuous, one of the latter two tests will be used based on the number
of unique values in the column data.

For special cases, the function is not always guessed correctly (e.g., if
the row data contains few unique values, a Fisher test may be used where
not appropriate). One of the default tests can be given explicitly with a
character string, one of \code{"fisher"}, \code{"wilcoxon"}, \code{"ttest"},
\code{"kruskal"}, \code{"chisq"}, \code{"anova"}, \code{"cuzick"},
\code{"jt"}, \code{"ca"}, or \code{"kw"} (can be abbreviated).

If \code{FUN} is a function, it must take two vector arguments: the row
variable vector, \code{data$varname}, and the column variable vector,
\code{data$byvar}, in this order and return a numeric p-value only.
}
\examples{
tabler_stat(mtcars, 'mpg', 'cyl')                 # picks kruskal-wallis
tabler_stat(mtcars, 'mpg', 'cyl', FUN = NA)       # no test, no p-value column
tabler_stat(mtcars, 'mpg', 'cyl', FUN = FALSE)    # no test, p-value column
tabler_stat(mtcars, 'mpg', 'cyl', FUN = 'fisher') # force fisher test
tabler_stat(mtcars, 'mpg', 'cyl', FUN = 'anova')  # force anova test

## use of a custom function - see ?rawr::cuzick.test
tabler_stat(mtcars, 'mpg', 'cyl',
  continuous_fn = Gmisc::describeMean,
  FUN = function(x, y)
    cuzick.test(x ~ y, data.frame(x, y))$p.value)

## "cuzick" is also an option for FUN
tabler_stat(mtcars, 'mpg', 'cyl', FUN = 'cuzick')


## typical usage
mt <- within(mtcars, {
  mpg[1:5] <- carb[1:5] <- drat[1:20] <- NA
  carb <- factor(carb, ordered = TRUE)
  cyl  <- factor(cyl)
})

tbl <- lapply(names(mt)[-10L], function(x)
  tabler_stat(mt, x, 'gear', percentage_sign = FALSE,
              color_cell_by = ifelse(is.factor(mt[, x]), 'pct', 'none'),
              continuous_fn = Gmisc::describeMean))

ht <- htmlTable::htmlTable(
  do.call('rbind', tbl),
  cgroup = c('', 'Gear', ''), n.cgroup = c(1, 3, 1),
  rgroup = names(mt)[-10L], n.rgroup = sapply(tbl, nrow),
  tfoot = toString(unique(unlist(strsplit(sapply(seq_along(tbl), function(ii)
    attr(tbl[[ii]], 'tfoot')), ', '))))
)
structure(ht, class = 'htmlTable')


## survival object (median, 95\% CI, log-rank test)
library('survival')
mt <- within(mt, {
  surv <- Surv(wt, vs)
})
tabler_stat(mt, 'surv', 'gear')


## use the tabler_stat2 wrapper for convenience
tabler_stat2(mt, names(mt)[-10L], 'gear')

tabler_stat2(mt, names(mt)[-10L], 'gear', FUN = c(cyl = 'jt'))

mt$gear <- factor(mt$gear, ordered = TRUE)
tabler_stat2(mt, names(mt)[-10L], 'gear',
  format_pval = function(x) format.pval(x, digits = 3))

}
\seealso{
\code{\link{fisher.test}}; \code{\link{wilcox.test}}; \code{\link{t.test}};
\code{\link{kruskal.test}}; \code{\link{chisq.test}}; \code{\link{anova}};
\code{\link{cuzick.test}}; \code{\link{jt.test}}; \code{\link{kw.test}};
\code{\link{ca.test}}

Other tabler: 
\code{\link{tabler_by}()},
\code{\link{tabler_resp}()},
\code{\link{tabler_stat2}()},
\code{\link{tabler}()}
}
\concept{tabler}
