% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surv.R
\name{coxph_pairs}
\alias{coxph_pairs}
\title{Pairwise \code{coxph} comparisons}
\usage{
coxph_pairs(
  object,
  data = NULL,
  level = 0.95,
  ...,
  method = p.adjust.methods,
  digits = getOption("digits")
)
}
\arguments{
\item{object}{an object of class \code{\link[survival]{survdiff}},
\code{\link[survival]{survfit}}, or \code{\link[survival]{coxph}}

alternatively, a formula in which case \code{data} must be provided}

\item{data}{(optional) a data frame in which to interpret the variables
named in \code{object} if given as a formula}

\item{level}{the confidence level for intervals; see \code{\link{confint}}}

\item{...}{additional arguments passed to \code{\link{survdiff}} such as
\code{na.action} or \code{rho} to control the test}

\item{method}{p-value correction method (default is \code{'holm'}; see
\code{\link{p.adjust}}}

\item{digits}{integer indicating the number of decimal places to be used}
}
\value{
A list with three elements:

\item{\code{n}}{the number of subjects in each pair of groups}
\item{\code{n_model}}{the number of subjects in each pair of models, i.e.,
  excluding subjects with missing data}
\item{\code{hr}}{the hazard ratio between pairs of groups}
\item{\code{lci}}{the lower \code{level} confidence intervals for each
  hazard ratio}
\item{\code{uci}}{the upper \code{level} confidence intervals for each
  hazard ratio}
\item{\code{p.value}}{Wald p-value for each hazard ratio. The lower and
  upper triangles of the matrix are uncorrected and adjusted, respectively,
  for multiple comparisons using \code{method} (the default is the Holm
  correction, see \code{\link{p.adjust}})}
}
\description{
Evaluate pairwise group differences in hazard ratios with
\code{\link[survival]{coxph}}.
}
\examples{
library('survival')
sdif <- survdiff(Surv(time, status) ~ sex, data = lung)
sfit <- survfit(Surv(time, status) ~ sex, data = lung)
cxph <- coxph(Surv(time, status) ~ sex, data = lung)

stopifnot(
  identical(coxph_pairs(sdif), coxph_pairs(sfit)),
  identical(coxph_pairs(sdif), coxph_pairs(cxph))
)

## numeric and integer variables will be treated as factor-like
sfit <- survfit(Surv(time, status) ~ extent, data = colon)
kmplot(sfit, add = TRUE)
coxph_pairs(sfit)$n

leg <- function(ii, jj) {
  hr <- coxph_pairs(sfit)
  sapply(seq_along(ii), function(i) {
    j <- ii[i]
    i <- jj[i]
    sprintf(
      '\%s vs \%s: n=\%s, HR: \%.2f (\%.2f - \%.2f), \%s',
      i, j, hr$n[i, j], hr$hr[i, j], hr$lci[i, j], hr$uci[i, j],
      pvalr(hr$p.value[i, j], show.p = TRUE)
    )
  })
}
legend(
  'bottomleft', leg(c('1', '1', '1'), c('2', '3', '4')),
  lty = 1, col = 2:4, bty = 'n'
)

## compare
f <- function(x) exp(coef(x))
f(coxph(Surv(time, status) ~ extent, data = colon[colon$extent \%in\% 1:2, ]))
f(coxph(Surv(time, status) ~ extent, data = colon[colon$extent \%in\% 2:3, ]))
f(coxph(Surv(time, status) ~ extent, data = colon[colon$extent \%in\% 3:4, ]))
## etc ...


## rawr >= 1.0.0 allows multiple variables
sfit <- survfit(Surv(time, status) ~ sex + extent, data = colon)
coxph_pairs(sfit, method = 'BH')


## also allows for a formula to be passed (data arg required)
coxph_pairs(Surv(time, status) ~ sex + extent, data = colon)


## strata will be ignored
sdif <- survdiff(Surv(time, status) ~ sex + strata(inst), data = lung)
coxph_pairs(sdif)

}
\seealso{
\code{\link[rawr]{survdiff_pairs}}
}
