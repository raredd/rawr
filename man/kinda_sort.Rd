% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zxx.R
\name{kinda_sort}
\alias{kinda_sort}
\title{Kinda sort}
\usage{
kinda_sort(x, n, decreasing = FALSE, indices = NULL, index.return = FALSE)
}
\arguments{
\item{x}{a numeric, complex, character, or logical vector}

\item{n}{number of elements of x to remain unsorted (the default is
approximately 10\% of \code{x}), ignored if \code{indices} is given}

\item{decreasing}{logical; if \code{FALSE} (default), \code{x} is sorted
in increasing order}

\item{indices}{a vector of indices specifying which elements of \code{x}
should \emph{not} be sorted}

\item{index.return}{logical; if \code{TRUE}, the ordering index vector is
returned}
}
\value{
\code{x} sorted approximately \code{(length(x) - n)/length(x)*100} percent.
}
\description{
\code{\link{sort}} a vector but not very well.

For a vector, \code{x}, \code{n} elements will be randomly selected, and
their positions will remain unchanged as all other elements are sorted.
Alternatively, a vector of \code{indices} of \code{x} can be given and
will remain unsorted.
}
\examples{
set.seed(1)
x <- sample(1:12)

rbind(
  unsorted   = x,
  '50\% sort' = kinda_sort(x, n = 5),
  'fix 2:5'  = kinda_sort(x, indices = 2:5)
)

#          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
# unsorted    9    4    7    1    2    5    3    8    6    11    12    10
# 50\% sort    9    1    4    6    2    5    3    7    8    11    10    12
# fix 2:5     3    4    7    1    2    5    6    8    9    10    11    12


## use index.return = TRUE for indices instead of values
set.seed(1)
x  <- runif(100)
o1 <- kinda_sort(x, n = 50, index.return = TRUE)

set.seed(1)
x  <- runif(100)
o2 <- kinda_sort(x, n = 50)

stopifnot(identical(x[o1], o2))

}
\seealso{
\code{\link{sort2}}; \code{\link{sym_sort}}
}
